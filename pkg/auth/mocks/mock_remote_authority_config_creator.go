// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/mesh-projects/pkg/auth (interfaces: RemoteAuthorityConfigCreator)

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	rest "k8s.io/client-go/rest"
)

// MockRemoteAuthorityConfigCreator is a mock of RemoteAuthorityConfigCreator interface
type MockRemoteAuthorityConfigCreator struct {
	ctrl     *gomock.Controller
	recorder *MockRemoteAuthorityConfigCreatorMockRecorder
}

// MockRemoteAuthorityConfigCreatorMockRecorder is the mock recorder for MockRemoteAuthorityConfigCreator
type MockRemoteAuthorityConfigCreatorMockRecorder struct {
	mock *MockRemoteAuthorityConfigCreator
}

// NewMockRemoteAuthorityConfigCreator creates a new mock instance
func NewMockRemoteAuthorityConfigCreator(ctrl *gomock.Controller) *MockRemoteAuthorityConfigCreator {
	mock := &MockRemoteAuthorityConfigCreator{ctrl: ctrl}
	mock.recorder = &MockRemoteAuthorityConfigCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRemoteAuthorityConfigCreator) EXPECT() *MockRemoteAuthorityConfigCreatorMockRecorder {
	return m.recorder
}

// ConfigFromRemoteServiceAccount mocks base method
func (m *MockRemoteAuthorityConfigCreator) ConfigFromRemoteServiceAccount(arg0 *rest.Config, arg1 *core.ResourceRef) (*rest.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfigFromRemoteServiceAccount", arg0, arg1)
	ret0, _ := ret[0].(*rest.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConfigFromRemoteServiceAccount indicates an expected call of ConfigFromRemoteServiceAccount
func (mr *MockRemoteAuthorityConfigCreatorMockRecorder) ConfigFromRemoteServiceAccount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigFromRemoteServiceAccount", reflect.TypeOf((*MockRemoteAuthorityConfigCreator)(nil).ConfigFromRemoteServiceAccount), arg0, arg1)
}
