// Code generated by MockGen. DO NOT EDIT.
// Source: ./appmesh_snapshot.go

// Package mock_appmesh is a generated GoMock package.
package mock_appmesh

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/solo-io/external-apis/pkg/api/appmesh/appmesh.aws.solo.io/v1alpha1"
	v1alpha1sets "github.com/solo-io/external-apis/pkg/api/appmesh/appmesh.aws.solo.io/v1alpha1/sets"
	appmesh "github.com/solo-io/service-mesh-hub/pkg/api/external/appmesh"
)

// MockSnapshot is a mock of Snapshot interface
type MockSnapshot struct {
	ctrl     *gomock.Controller
	recorder *MockSnapshotMockRecorder
}

// MockSnapshotMockRecorder is the mock recorder for MockSnapshot
type MockSnapshotMockRecorder struct {
	mock *MockSnapshot
}

// NewMockSnapshot creates a new mock instance
func NewMockSnapshot(ctrl *gomock.Controller) *MockSnapshot {
	mock := &MockSnapshot{ctrl: ctrl}
	mock.recorder = &MockSnapshotMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSnapshot) EXPECT() *MockSnapshotMockRecorder {
	return m.recorder
}

// VirtualNodes mocks base method
func (m *MockSnapshot) VirtualNodes() v1alpha1sets.VirtualNodeSet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VirtualNodes")
	ret0, _ := ret[0].(v1alpha1sets.VirtualNodeSet)
	return ret0
}

// VirtualNodes indicates an expected call of VirtualNodes
func (mr *MockSnapshotMockRecorder) VirtualNodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VirtualNodes", reflect.TypeOf((*MockSnapshot)(nil).VirtualNodes))
}

// VirtualRouters mocks base method
func (m *MockSnapshot) VirtualRouters() v1alpha1sets.VirtualRouterSet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VirtualRouters")
	ret0, _ := ret[0].(v1alpha1sets.VirtualRouterSet)
	return ret0
}

// VirtualRouters indicates an expected call of VirtualRouters
func (mr *MockSnapshotMockRecorder) VirtualRouters() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VirtualRouters", reflect.TypeOf((*MockSnapshot)(nil).VirtualRouters))
}

// Routes mocks base method
func (m *MockSnapshot) Routes() v1alpha1sets.RouteSet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Routes")
	ret0, _ := ret[0].(v1alpha1sets.RouteSet)
	return ret0
}

// Routes indicates an expected call of Routes
func (mr *MockSnapshotMockRecorder) Routes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Routes", reflect.TypeOf((*MockSnapshot)(nil).Routes))
}

// VirtualServices mocks base method
func (m *MockSnapshot) VirtualServices() v1alpha1sets.VirtualServiceSet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VirtualServices")
	ret0, _ := ret[0].(v1alpha1sets.VirtualServiceSet)
	return ret0
}

// VirtualServices indicates an expected call of VirtualServices
func (mr *MockSnapshotMockRecorder) VirtualServices() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VirtualServices", reflect.TypeOf((*MockSnapshot)(nil).VirtualServices))
}

// Meshes mocks base method
func (m *MockSnapshot) Meshes() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Meshes")
	ret0, _ := ret[0].([]string)
	return ret0
}

// Meshes indicates an expected call of Meshes
func (mr *MockSnapshotMockRecorder) Meshes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Meshes", reflect.TypeOf((*MockSnapshot)(nil).Meshes))
}

// MarshalJSON mocks base method
func (m *MockSnapshot) MarshalJSON() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MarshalJSON")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MarshalJSON indicates an expected call of MarshalJSON
func (mr *MockSnapshotMockRecorder) MarshalJSON() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MarshalJSON", reflect.TypeOf((*MockSnapshot)(nil).MarshalJSON))
}

// MockBuilder is a mock of Builder interface
type MockBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockBuilderMockRecorder
}

// MockBuilderMockRecorder is the mock recorder for MockBuilder
type MockBuilderMockRecorder struct {
	mock *MockBuilder
}

// NewMockBuilder creates a new mock instance
func NewMockBuilder(ctrl *gomock.Controller) *MockBuilder {
	mock := &MockBuilder{ctrl: ctrl}
	mock.recorder = &MockBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBuilder) EXPECT() *MockBuilderMockRecorder {
	return m.recorder
}

// AddVirtualNodes mocks base method
func (m *MockBuilder) AddVirtualNodes(virtualNodes ...*v1alpha1.VirtualNode) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range virtualNodes {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "AddVirtualNodes", varargs...)
}

// AddVirtualNodes indicates an expected call of AddVirtualNodes
func (mr *MockBuilderMockRecorder) AddVirtualNodes(virtualNodes ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddVirtualNodes", reflect.TypeOf((*MockBuilder)(nil).AddVirtualNodes), virtualNodes...)
}

// GetVirtualNodes mocks base method
func (m *MockBuilder) GetVirtualNodes() v1alpha1sets.VirtualNodeSet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVirtualNodes")
	ret0, _ := ret[0].(v1alpha1sets.VirtualNodeSet)
	return ret0
}

// GetVirtualNodes indicates an expected call of GetVirtualNodes
func (mr *MockBuilderMockRecorder) GetVirtualNodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVirtualNodes", reflect.TypeOf((*MockBuilder)(nil).GetVirtualNodes))
}

// AddVirtualRouters mocks base method
func (m *MockBuilder) AddVirtualRouters(virtualRouters ...*v1alpha1.VirtualRouter) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range virtualRouters {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "AddVirtualRouters", varargs...)
}

// AddVirtualRouters indicates an expected call of AddVirtualRouters
func (mr *MockBuilderMockRecorder) AddVirtualRouters(virtualRouters ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddVirtualRouters", reflect.TypeOf((*MockBuilder)(nil).AddVirtualRouters), virtualRouters...)
}

// GetVirtualRouters mocks base method
func (m *MockBuilder) GetVirtualRouters() v1alpha1sets.VirtualRouterSet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVirtualRouters")
	ret0, _ := ret[0].(v1alpha1sets.VirtualRouterSet)
	return ret0
}

// GetVirtualRouters indicates an expected call of GetVirtualRouters
func (mr *MockBuilderMockRecorder) GetVirtualRouters() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVirtualRouters", reflect.TypeOf((*MockBuilder)(nil).GetVirtualRouters))
}

// AddRoutes mocks base method
func (m *MockBuilder) AddRoutes(routes ...*v1alpha1.Route) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range routes {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "AddRoutes", varargs...)
}

// AddRoutes indicates an expected call of AddRoutes
func (mr *MockBuilderMockRecorder) AddRoutes(routes ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRoutes", reflect.TypeOf((*MockBuilder)(nil).AddRoutes), routes...)
}

// GetRoutes mocks base method
func (m *MockBuilder) GetRoutes() v1alpha1sets.RouteSet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoutes")
	ret0, _ := ret[0].(v1alpha1sets.RouteSet)
	return ret0
}

// GetRoutes indicates an expected call of GetRoutes
func (mr *MockBuilderMockRecorder) GetRoutes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoutes", reflect.TypeOf((*MockBuilder)(nil).GetRoutes))
}

// AddVirtualServices mocks base method
func (m *MockBuilder) AddVirtualServices(virtualServices ...*v1alpha1.VirtualService) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range virtualServices {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "AddVirtualServices", varargs...)
}

// AddVirtualServices indicates an expected call of AddVirtualServices
func (mr *MockBuilderMockRecorder) AddVirtualServices(virtualServices ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddVirtualServices", reflect.TypeOf((*MockBuilder)(nil).AddVirtualServices), virtualServices...)
}

// GetVirtualServices mocks base method
func (m *MockBuilder) GetVirtualServices() v1alpha1sets.VirtualServiceSet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVirtualServices")
	ret0, _ := ret[0].(v1alpha1sets.VirtualServiceSet)
	return ret0
}

// GetVirtualServices indicates an expected call of GetVirtualServices
func (mr *MockBuilderMockRecorder) GetVirtualServices() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVirtualServices", reflect.TypeOf((*MockBuilder)(nil).GetVirtualServices))
}

// BuildSnapshot mocks base method
func (m *MockBuilder) BuildSnapshot() appmesh.Snapshot {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildSnapshot")
	ret0, _ := ret[0].(appmesh.Snapshot)
	return ret0
}

// BuildSnapshot indicates an expected call of BuildSnapshot
func (mr *MockBuilderMockRecorder) BuildSnapshot() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildSnapshot", reflect.TypeOf((*MockBuilder)(nil).BuildSnapshot))
}

// AddMesh mocks base method
func (m *MockBuilder) AddMesh(mesh string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddMesh", mesh)
}

// AddMesh indicates an expected call of AddMesh
func (mr *MockBuilderMockRecorder) AddMesh(mesh interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMesh", reflect.TypeOf((*MockBuilder)(nil).AddMesh), mesh)
}
