// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/mesh-projects/api/core/v1alpha1/mesh.proto

package v1alpha1

import (
	fmt "fmt"
	math "math"

	proto "github.com/gogo/protobuf/proto"
	_ "github.com/solo-io/mesh-projects/pkg/api/v1"
	_ "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Meshes represent a currently registered service mesh.
type MeshSpec struct {
	// Types that are valid to be assigned to MeshType:
	//	*MeshSpec_Istio
	//	*MeshSpec_AwsAppMesh
	//	*MeshSpec_Linkerd
	//	*MeshSpec_ConsulConnect
	MeshType isMeshSpec_MeshType `protobuf_oneof:"mesh_type"`
	Cluster  *ResourceRef        `protobuf:"bytes,5,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// List of services, these can either be kube services, or smh services
	Services []*ResourceRef `protobuf:"bytes,6,rep,name=services,proto3" json:"services,omitempty"`
	// pods also contain ServiceAccount Information, therefore we do not need to store it here
	Pods                 []*ResourceRef `protobuf:"bytes,7,rep,name=pods,proto3" json:"pods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MeshSpec) Reset()         { *m = MeshSpec{} }
func (m *MeshSpec) String() string { return proto.CompactTextString(m) }
func (*MeshSpec) ProtoMessage()    {}
func (*MeshSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d4089e58fa1f863, []int{0}
}
func (m *MeshSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeshSpec.Unmarshal(m, b)
}
func (m *MeshSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeshSpec.Marshal(b, m, deterministic)
}
func (m *MeshSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeshSpec.Merge(m, src)
}
func (m *MeshSpec) XXX_Size() int {
	return xxx_messageInfo_MeshSpec.Size(m)
}
func (m *MeshSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MeshSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MeshSpec proto.InternalMessageInfo

type isMeshSpec_MeshType interface {
	isMeshSpec_MeshType()
}

type MeshSpec_Istio struct {
	Istio *IstioMesh `protobuf:"bytes,1,opt,name=istio,proto3,oneof" json:"istio,omitempty"`
}
type MeshSpec_AwsAppMesh struct {
	AwsAppMesh *AwsAppMesh `protobuf:"bytes,2,opt,name=aws_app_mesh,json=awsAppMesh,proto3,oneof" json:"aws_app_mesh,omitempty"`
}
type MeshSpec_Linkerd struct {
	Linkerd *LinkerdMesh `protobuf:"bytes,3,opt,name=linkerd,proto3,oneof" json:"linkerd,omitempty"`
}
type MeshSpec_ConsulConnect struct {
	ConsulConnect *ConsulConnectMesh `protobuf:"bytes,4,opt,name=consul_connect,json=consulConnect,proto3,oneof" json:"consul_connect,omitempty"`
}

func (*MeshSpec_Istio) isMeshSpec_MeshType()         {}
func (*MeshSpec_AwsAppMesh) isMeshSpec_MeshType()    {}
func (*MeshSpec_Linkerd) isMeshSpec_MeshType()       {}
func (*MeshSpec_ConsulConnect) isMeshSpec_MeshType() {}

func (m *MeshSpec) GetMeshType() isMeshSpec_MeshType {
	if m != nil {
		return m.MeshType
	}
	return nil
}

func (m *MeshSpec) GetIstio() *IstioMesh {
	if x, ok := m.GetMeshType().(*MeshSpec_Istio); ok {
		return x.Istio
	}
	return nil
}

func (m *MeshSpec) GetAwsAppMesh() *AwsAppMesh {
	if x, ok := m.GetMeshType().(*MeshSpec_AwsAppMesh); ok {
		return x.AwsAppMesh
	}
	return nil
}

func (m *MeshSpec) GetLinkerd() *LinkerdMesh {
	if x, ok := m.GetMeshType().(*MeshSpec_Linkerd); ok {
		return x.Linkerd
	}
	return nil
}

func (m *MeshSpec) GetConsulConnect() *ConsulConnectMesh {
	if x, ok := m.GetMeshType().(*MeshSpec_ConsulConnect); ok {
		return x.ConsulConnect
	}
	return nil
}

func (m *MeshSpec) GetCluster() *ResourceRef {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *MeshSpec) GetServices() []*ResourceRef {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *MeshSpec) GetPods() []*ResourceRef {
	if m != nil {
		return m.Pods
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MeshSpec) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MeshSpec_Istio)(nil),
		(*MeshSpec_AwsAppMesh)(nil),
		(*MeshSpec_Linkerd)(nil),
		(*MeshSpec_ConsulConnect)(nil),
	}
}

type MeshInstallation struct {
	// where the control plane has been installed
	InstallationNamespace string `protobuf:"bytes,1,opt,name=installation_namespace,json=installationNamespace,proto3" json:"installation_namespace,omitempty"`
	// version of the mesh which has been installed
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeshInstallation) Reset()         { *m = MeshInstallation{} }
func (m *MeshInstallation) String() string { return proto.CompactTextString(m) }
func (*MeshInstallation) ProtoMessage()    {}
func (*MeshInstallation) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d4089e58fa1f863, []int{1}
}
func (m *MeshInstallation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeshInstallation.Unmarshal(m, b)
}
func (m *MeshInstallation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeshInstallation.Marshal(b, m, deterministic)
}
func (m *MeshInstallation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeshInstallation.Merge(m, src)
}
func (m *MeshInstallation) XXX_Size() int {
	return xxx_messageInfo_MeshInstallation.Size(m)
}
func (m *MeshInstallation) XXX_DiscardUnknown() {
	xxx_messageInfo_MeshInstallation.DiscardUnknown(m)
}

var xxx_messageInfo_MeshInstallation proto.InternalMessageInfo

func (m *MeshInstallation) GetInstallationNamespace() string {
	if m != nil {
		return m.InstallationNamespace
	}
	return ""
}

func (m *MeshInstallation) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Mesh object representing an installed Istio control plane
type IstioMesh struct {
	Installation         *MeshInstallation `protobuf:"bytes,1,opt,name=installation,proto3" json:"installation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *IstioMesh) Reset()         { *m = IstioMesh{} }
func (m *IstioMesh) String() string { return proto.CompactTextString(m) }
func (*IstioMesh) ProtoMessage()    {}
func (*IstioMesh) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d4089e58fa1f863, []int{2}
}
func (m *IstioMesh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IstioMesh.Unmarshal(m, b)
}
func (m *IstioMesh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IstioMesh.Marshal(b, m, deterministic)
}
func (m *IstioMesh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IstioMesh.Merge(m, src)
}
func (m *IstioMesh) XXX_Size() int {
	return xxx_messageInfo_IstioMesh.Size(m)
}
func (m *IstioMesh) XXX_DiscardUnknown() {
	xxx_messageInfo_IstioMesh.DiscardUnknown(m)
}

var xxx_messageInfo_IstioMesh proto.InternalMessageInfo

func (m *IstioMesh) GetInstallation() *MeshInstallation {
	if m != nil {
		return m.Installation
	}
	return nil
}

// Mesh object representing AWS App Mesh
type AwsAppMesh struct {
	Installation *MeshInstallation `protobuf:"bytes,1,opt,name=installation,proto3" json:"installation,omitempty"`
	// The AWS region the AWS App Mesh control plane resources exist in.
	Region               string   `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AwsAppMesh) Reset()         { *m = AwsAppMesh{} }
func (m *AwsAppMesh) String() string { return proto.CompactTextString(m) }
func (*AwsAppMesh) ProtoMessage()    {}
func (*AwsAppMesh) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d4089e58fa1f863, []int{3}
}
func (m *AwsAppMesh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AwsAppMesh.Unmarshal(m, b)
}
func (m *AwsAppMesh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AwsAppMesh.Marshal(b, m, deterministic)
}
func (m *AwsAppMesh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwsAppMesh.Merge(m, src)
}
func (m *AwsAppMesh) XXX_Size() int {
	return xxx_messageInfo_AwsAppMesh.Size(m)
}
func (m *AwsAppMesh) XXX_DiscardUnknown() {
	xxx_messageInfo_AwsAppMesh.DiscardUnknown(m)
}

var xxx_messageInfo_AwsAppMesh proto.InternalMessageInfo

func (m *AwsAppMesh) GetInstallation() *MeshInstallation {
	if m != nil {
		return m.Installation
	}
	return nil
}

func (m *AwsAppMesh) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

// Mesh object representing an installed Linkerd control plane
type LinkerdMesh struct {
	Installation         *MeshInstallation `protobuf:"bytes,1,opt,name=installation,proto3" json:"installation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LinkerdMesh) Reset()         { *m = LinkerdMesh{} }
func (m *LinkerdMesh) String() string { return proto.CompactTextString(m) }
func (*LinkerdMesh) ProtoMessage()    {}
func (*LinkerdMesh) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d4089e58fa1f863, []int{4}
}
func (m *LinkerdMesh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkerdMesh.Unmarshal(m, b)
}
func (m *LinkerdMesh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkerdMesh.Marshal(b, m, deterministic)
}
func (m *LinkerdMesh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkerdMesh.Merge(m, src)
}
func (m *LinkerdMesh) XXX_Size() int {
	return xxx_messageInfo_LinkerdMesh.Size(m)
}
func (m *LinkerdMesh) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkerdMesh.DiscardUnknown(m)
}

var xxx_messageInfo_LinkerdMesh proto.InternalMessageInfo

func (m *LinkerdMesh) GetInstallation() *MeshInstallation {
	if m != nil {
		return m.Installation
	}
	return nil
}

type ConsulConnectMesh struct {
	Installation         *MeshInstallation `protobuf:"bytes,1,opt,name=installation,proto3" json:"installation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConsulConnectMesh) Reset()         { *m = ConsulConnectMesh{} }
func (m *ConsulConnectMesh) String() string { return proto.CompactTextString(m) }
func (*ConsulConnectMesh) ProtoMessage()    {}
func (*ConsulConnectMesh) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d4089e58fa1f863, []int{5}
}
func (m *ConsulConnectMesh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsulConnectMesh.Unmarshal(m, b)
}
func (m *ConsulConnectMesh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsulConnectMesh.Marshal(b, m, deterministic)
}
func (m *ConsulConnectMesh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsulConnectMesh.Merge(m, src)
}
func (m *ConsulConnectMesh) XXX_Size() int {
	return xxx_messageInfo_ConsulConnectMesh.Size(m)
}
func (m *ConsulConnectMesh) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsulConnectMesh.DiscardUnknown(m)
}

var xxx_messageInfo_ConsulConnectMesh proto.InternalMessageInfo

func (m *ConsulConnectMesh) GetInstallation() *MeshInstallation {
	if m != nil {
		return m.Installation
	}
	return nil
}

type MeshGroupSpec struct {
	// User-provided display name for the mesh group.
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The meshes contained in this group.
	Meshes               []*ResourceRef `protobuf:"bytes,3,rep,name=meshes,proto3" json:"meshes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MeshGroupSpec) Reset()         { *m = MeshGroupSpec{} }
func (m *MeshGroupSpec) String() string { return proto.CompactTextString(m) }
func (*MeshGroupSpec) ProtoMessage()    {}
func (*MeshGroupSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d4089e58fa1f863, []int{6}
}
func (m *MeshGroupSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeshGroupSpec.Unmarshal(m, b)
}
func (m *MeshGroupSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeshGroupSpec.Marshal(b, m, deterministic)
}
func (m *MeshGroupSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeshGroupSpec.Merge(m, src)
}
func (m *MeshGroupSpec) XXX_Size() int {
	return xxx_messageInfo_MeshGroupSpec.Size(m)
}
func (m *MeshGroupSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MeshGroupSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MeshGroupSpec proto.InternalMessageInfo

func (m *MeshGroupSpec) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *MeshGroupSpec) GetMeshes() []*ResourceRef {
	if m != nil {
		return m.Meshes
	}
	return nil
}

func init() {
	proto.RegisterType((*MeshSpec)(nil), "core.zephyr.solo.io.MeshSpec")
	proto.RegisterType((*MeshInstallation)(nil), "core.zephyr.solo.io.MeshInstallation")
	proto.RegisterType((*IstioMesh)(nil), "core.zephyr.solo.io.IstioMesh")
	proto.RegisterType((*AwsAppMesh)(nil), "core.zephyr.solo.io.AwsAppMesh")
	proto.RegisterType((*LinkerdMesh)(nil), "core.zephyr.solo.io.LinkerdMesh")
	proto.RegisterType((*ConsulConnectMesh)(nil), "core.zephyr.solo.io.ConsulConnectMesh")
	proto.RegisterType((*MeshGroupSpec)(nil), "core.zephyr.solo.io.MeshGroupSpec")
}

func init() {
	proto.RegisterFile("github.com/solo-io/mesh-projects/api/core/v1alpha1/mesh.proto", fileDescriptor_4d4089e58fa1f863)
}

var fileDescriptor_4d4089e58fa1f863 = []byte{
	// 517 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x4d, 0x6f, 0x13, 0x31,
	0x10, 0x86, 0x29, 0x69, 0x93, 0x66, 0xd2, 0x22, 0x30, 0xa2, 0x5a, 0xf5, 0xd0, 0x86, 0x20, 0x10,
	0x1c, 0xba, 0xab, 0xf0, 0x25, 0x84, 0xca, 0xa1, 0x8d, 0x50, 0x89, 0xc4, 0x87, 0xb4, 0x48, 0x08,
	0x71, 0x20, 0x72, 0x9c, 0x69, 0x62, 0xe2, 0xac, 0x2d, 0xdb, 0x49, 0x15, 0xfe, 0x26, 0x7f, 0x08,
	0xd9, 0x71, 0xb6, 0x4b, 0xbb, 0xa2, 0x39, 0xe4, 0x38, 0x3b, 0xef, 0xf3, 0x7a, 0x26, 0x33, 0x19,
	0x78, 0x37, 0xe4, 0x76, 0x34, 0xed, 0xc7, 0x4c, 0x4e, 0x12, 0x23, 0x85, 0x3c, 0xe2, 0x32, 0x99,
	0xa0, 0x19, 0x1d, 0x29, 0x2d, 0x7f, 0x21, 0xb3, 0x26, 0xa1, 0x8a, 0x27, 0x4c, 0x6a, 0x4c, 0x66,
	0x6d, 0x2a, 0xd4, 0x88, 0xb6, 0x7d, 0x3e, 0x56, 0x5a, 0x5a, 0x49, 0xee, 0xbb, 0x4c, 0xfc, 0x1b,
	0xd5, 0x68, 0xae, 0x63, 0xc7, 0xc7, 0x5c, 0xee, 0x1f, 0x78, 0xa3, 0x31, 0xb7, 0x9e, 0x9d, 0xb5,
	0x93, 0x65, 0xbc, 0x80, 0xf6, 0x1f, 0x5d, 0x7f, 0xc0, 0x89, 0x50, 0x20, 0xb3, 0x52, 0x07, 0xd1,
	0x61, 0xa9, 0x48, 0xf7, 0x29, 0x0b, 0x82, 0x67, 0x37, 0x95, 0xa9, 0xf1, 0x7c, 0x21, 0x6d, 0xfd,
	0xa9, 0xc0, 0xf6, 0x27, 0x34, 0xa3, 0xaf, 0x0a, 0x19, 0x79, 0x0d, 0x5b, 0xdc, 0x58, 0x2e, 0xa3,
	0x8d, 0xe6, 0xc6, 0xd3, 0xc6, 0xf3, 0x83, 0xb8, 0xa4, 0x85, 0xb8, 0xeb, 0x14, 0x0e, 0xf9, 0x70,
	0x2b, 0x5d, 0xc8, 0x49, 0x07, 0x76, 0xe8, 0x85, 0xe9, 0x51, 0xa5, 0x7a, 0xee, 0xe5, 0xe8, 0xb6,
	0xc7, 0x0f, 0x4b, 0xf1, 0x93, 0x0b, 0x73, 0xa2, 0x54, 0xe0, 0x81, 0xe6, 0x11, 0x39, 0x86, 0x9a,
	0xe0, 0xd9, 0x18, 0xf5, 0x20, 0xaa, 0x78, 0xbe, 0x59, 0xca, 0x7f, 0x5c, 0x68, 0x82, 0xc1, 0x12,
	0x21, 0x5f, 0xe0, 0x0e, 0x93, 0x99, 0x99, 0x8a, 0x1e, 0x93, 0x59, 0x86, 0xcc, 0x46, 0x9b, 0xde,
	0xe4, 0x49, 0xa9, 0x49, 0xc7, 0x4b, 0x3b, 0x0b, 0x65, 0xb0, 0xda, 0x65, 0xc5, 0x8f, 0xe4, 0x2d,
	0xd4, 0x98, 0x98, 0x1a, 0x8b, 0x3a, 0xda, 0xfa, 0x4f, 0x39, 0x29, 0x1a, 0x39, 0xd5, 0x0c, 0x53,
	0x3c, 0x4f, 0x97, 0x00, 0x39, 0x86, 0x6d, 0x83, 0x7a, 0xc6, 0x19, 0x9a, 0xa8, 0xda, 0xac, 0xac,
	0x04, 0xe7, 0x04, 0x79, 0x09, 0x9b, 0x4a, 0x0e, 0x4c, 0x54, 0x5b, 0x91, 0xf4, 0xea, 0xd3, 0x06,
	0xd4, 0xdd, 0x6f, 0xdf, 0xb3, 0x73, 0x85, 0x2d, 0x06, 0x77, 0x5d, 0x57, 0xdd, 0xcc, 0x58, 0x2a,
	0x04, 0xb5, 0x5c, 0x66, 0xe4, 0x15, 0xec, 0xf1, 0x42, 0xdc, 0xcb, 0xe8, 0x04, 0x8d, 0xa2, 0x0c,
	0xfd, 0xb4, 0xeb, 0xe9, 0x83, 0x62, 0xf6, 0xf3, 0x32, 0x49, 0x22, 0xa8, 0xcd, 0x50, 0x1b, 0x2e,
	0x33, 0x3f, 0xd6, 0x7a, 0xba, 0x0c, 0x5b, 0xdf, 0xa0, 0x9e, 0xef, 0x02, 0xe9, 0xc2, 0x4e, 0x91,
	0x0f, 0x1b, 0xf4, 0xb8, 0xb4, 0xf8, 0xab, 0xa5, 0xa5, 0xff, 0xa0, 0x2d, 0x09, 0x70, 0xb9, 0x24,
	0x6b, 0x34, 0x26, 0x7b, 0x50, 0xd5, 0x38, 0xbc, 0xec, 0x24, 0x44, 0xad, 0xef, 0xd0, 0x28, 0x6c,
	0xd5, 0x3a, 0x5b, 0xf9, 0x09, 0xf7, 0xae, 0xad, 0xda, 0x3a, 0xfd, 0x05, 0xec, 0x3a, 0xc5, 0x99,
	0x96, 0x53, 0xe5, 0xff, 0xc1, 0x0f, 0x61, 0x67, 0xc0, 0x8d, 0x12, 0x74, 0xee, 0xe7, 0x1b, 0x46,
	0xdb, 0x08, 0xdf, 0xdc, 0x54, 0xc9, 0x1b, 0xa8, 0xba, 0x45, 0x41, 0x13, 0x55, 0x56, 0x5c, 0xb0,
	0xa0, 0x3f, 0x3d, 0xfb, 0xf1, 0xfe, 0xc6, 0x93, 0xa8, 0xc6, 0xc3, 0xfc, 0xde, 0x5c, 0xf1, 0xcc,
	0xcf, 0x4f, 0xbf, 0xea, 0x6f, 0xcf, 0x8b, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe1, 0xfc, 0x58,
	0xb8, 0x62, 0x05, 0x00, 0x00,
}
