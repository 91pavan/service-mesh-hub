// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/mesh-projects/api/discovery/v1alpha1/cluster.proto

package types

import (
	fmt "fmt"
	math "math"

	proto "github.com/gogo/protobuf/proto"
	types "github.com/solo-io/mesh-projects/pkg/api/core.zephyr.solo.io/v1alpha1/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// specifies a method by which to select pods
// with in a mesh for the application of rules and policies
type KubernetesClusterSpec struct {
	// pointer to secret which contains the kubeconfig with information to connect to the remote cluster.
	SecretRef *types.ResourceRef `protobuf:"bytes,1,opt,name=secret_ref,json=secretRef,proto3" json:"secret_ref,omitempty"`
	// context to use within the kubeconfig pointed to by the above reference
	Context string `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	// version of kubernetes
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// cloud provider, empty if unknown
	Cloud                string   `protobuf:"bytes,4,opt,name=cloud,proto3" json:"cloud,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubernetesClusterSpec) Reset()         { *m = KubernetesClusterSpec{} }
func (m *KubernetesClusterSpec) String() string { return proto.CompactTextString(m) }
func (*KubernetesClusterSpec) ProtoMessage()    {}
func (*KubernetesClusterSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d15df6106e04f6f, []int{0}
}
func (m *KubernetesClusterSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubernetesClusterSpec.Unmarshal(m, b)
}
func (m *KubernetesClusterSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubernetesClusterSpec.Marshal(b, m, deterministic)
}
func (m *KubernetesClusterSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesClusterSpec.Merge(m, src)
}
func (m *KubernetesClusterSpec) XXX_Size() int {
	return xxx_messageInfo_KubernetesClusterSpec.Size(m)
}
func (m *KubernetesClusterSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesClusterSpec.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesClusterSpec proto.InternalMessageInfo

func (m *KubernetesClusterSpec) GetSecretRef() *types.ResourceRef {
	if m != nil {
		return m.SecretRef
	}
	return nil
}

func (m *KubernetesClusterSpec) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *KubernetesClusterSpec) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *KubernetesClusterSpec) GetCloud() string {
	if m != nil {
		return m.Cloud
	}
	return ""
}

func init() {
	proto.RegisterType((*KubernetesClusterSpec)(nil), "discovery.zephyr.solo.io.KubernetesClusterSpec")
}

func init() {
	proto.RegisterFile("github.com/solo-io/mesh-projects/api/discovery/v1alpha1/cluster.proto", fileDescriptor_3d15df6106e04f6f)
}

var fileDescriptor_3d15df6106e04f6f = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xbf, 0x4e, 0xc3, 0x30,
	0x18, 0xc4, 0x15, 0xfe, 0xaa, 0x66, 0x8b, 0x40, 0xb2, 0x98, 0x22, 0xa6, 0x32, 0xd4, 0x56, 0xe1,
	0x01, 0x90, 0x40, 0x4c, 0x2c, 0xc8, 0x6c, 0x2c, 0x28, 0x71, 0x2f, 0x8d, 0x21, 0xcd, 0x67, 0x7d,
	0x76, 0x22, 0xc2, 0xe3, 0xf0, 0xa4, 0x28, 0x0d, 0x50, 0x51, 0x86, 0x8e, 0xe7, 0xb3, 0x7f, 0xe7,
	0x3b, 0x71, 0xbf, 0x74, 0xb1, 0x6a, 0x0b, 0x65, 0x69, 0xa5, 0x03, 0xd5, 0x34, 0x73, 0xa4, 0x57,
	0x08, 0xd5, 0xcc, 0x33, 0xbd, 0xc2, 0xc6, 0xa0, 0x73, 0xef, 0xf4, 0xc2, 0x05, 0x4b, 0x1d, 0xb8,
	0xd7, 0xdd, 0x3c, 0xaf, 0x7d, 0x95, 0xcf, 0xb5, 0xad, 0xdb, 0x10, 0xc1, 0xca, 0x33, 0x45, 0x4a,
	0xe5, 0xef, 0x0d, 0xf5, 0x01, 0x5f, 0xf5, 0xac, 0x06, 0x98, 0x72, 0x74, 0x7e, 0xf9, 0x9f, 0x66,
	0x89, 0xb1, 0x01, 0x31, 0xca, 0x11, 0x72, 0xf1, 0x99, 0x88, 0xb3, 0x87, 0xb6, 0x00, 0x37, 0x88,
	0x08, 0x77, 0x63, 0xc0, 0x93, 0x87, 0x4d, 0x6f, 0x84, 0x08, 0xb0, 0x8c, 0xf8, 0xc2, 0x28, 0x65,
	0x92, 0x25, 0xd3, 0x93, 0xab, 0x4c, 0x0d, 0x9c, 0xad, 0x38, 0x65, 0x10, 0xa8, 0x65, 0x0b, 0x83,
	0xd2, 0x4c, 0xc6, 0x37, 0x06, 0x65, 0x2a, 0xc5, 0xb1, 0xa5, 0x26, 0xe2, 0x3d, 0xca, 0xbd, 0x2c,
	0x99, 0x4e, 0xcc, 0x8f, 0x1c, 0x9c, 0x0e, 0x1c, 0x1c, 0x35, 0x72, 0x7f, 0x74, 0xbe, 0x65, 0x7a,
	0x2a, 0x0e, 0x6d, 0x4d, 0xed, 0x42, 0x1e, 0xac, 0xcf, 0x47, 0x71, 0x6b, 0x9e, 0x1f, 0x77, 0x4e,
	0xe6, 0xdf, 0x96, 0x7f, 0x67, 0xdb, 0xfa, 0xe5, 0xa6, 0x7c, 0xec, 0x3d, 0x42, 0x71, 0xb4, 0xee,
	0x7f, 0xfd, 0x15, 0x00, 0x00, 0xff, 0xff, 0x65, 0x63, 0xad, 0x62, 0x8d, 0x01, 0x00, 0x00,
}
