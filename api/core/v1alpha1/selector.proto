syntax = "proto3";
package core.zephyr.solo.io;
option go_package = "github.com/solo-io/mesh-projects/pkg/api/core.zephyr.solo.io/v1alpha1/types";

import "google/protobuf/wrappers.proto";
import "mesh-projects/api/core/v1alpha1/ref.proto";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

/*
    Global selector used to select resources from any set of clusters, namespaces, and/or labels

    Specifies a method by which to select pods within a mesh for the application of rules and policies.

    Only one of (labels + namespaces + cluster) or (resource refs) may be provided. If all four are provided, it will be
    considered an error, and the Status of the top level resource will be updated to reflect an IllegalSelection.

    Currently only selection on the local cluster is supported, indicated by a nil cluster field.

    Valid:
        1.
            selector:
                labels:
                    foo: bar
                    hello: world
                namespaces:
                - default
                cluster: "cluster-name"
        2.
            selector:
                refs:
                - name: foo
                  namespace: bar

    Invalid:
        1.
            selector:
                labels:
                    foo: bar
                    hello: world
                namespaces:
                - default
                cluster: "cluster-name"
                refs:
                - name: foo
                  namespace: bar

    By default labels will select across all namespaces, unless a list of namespaces is provided, in which case
    it will only select from those. An empty or nil list is equal to AllNamespaces.

    If no labels are given, and only namespaces, the full list of resources from the namespace will be selected.

    The following selector will select all resources with the following labels in every namespace, in the local cluster:

    selector:
        labels:
            foo: bar
            hello: world

    Whereas the next selector will only select from the specified namespaces (foo, bar), in the local cluster:

    selector:
        labels:
            foo: bar
            hello: world
        namespaces
        - foo
        - bar

    This final selector will select all resources of a given type in the target namespace (foo), in the local cluster:

    selector
        namespaces
        - foo
*/
message Selector {
    // map of labels to match against
    map<string, string> labels = 1;

    // list of namespaces to search
    repeated string namespaces = 2;

    // If empty string or nil, select in the cluster local to the enclosing resource, else select in the referenced remote cluster
    google.protobuf.StringValue cluster = 3;

    // Apply the selector to one or more services by adding their refs here.
    // If the resources are not in the local cluster, the "cluster" field must be populated with the remote cluster name.
    repeated ResourceRef refs = 4;
}
