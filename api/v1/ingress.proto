syntax = "proto3";
package zephyr.solo.io;
option go_package = "github.com/solo-io/mesh-projects/pkg/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/solo-kit/api/v1/metadata.proto";
import "github.com/solo-io/solo-kit/api/v1/status.proto";
import "github.com/solo-io/solo-kit/api/v1/solo-kit.proto";

/*
MeshIngress represents a managed ingress (edge router) which can proxy connections
for services in a Mesh managed by SuperGloo
*/
message MeshIngress {

    option (core.solo.io.resource).short_name = "mi";
    option (core.solo.io.resource).plural_name = "meshingresses";

    // Status indicates the validation status of this resource.
    // Status is read-only by clients, and set by supergloo during validation
    core.solo.io.Status status = 100 [(gogoproto.nullable) = false, (gogoproto.moretags) = "testdiff:\"ignore\""];

    // Metadata contains the object metadata for this resource
    core.solo.io.Metadata metadata = 101 [(gogoproto.nullable) = false];

    // Public address by which this entry point can be reached
    // Must be either DNS or a valid IP
    string address = 3;

    uint32 port = 4;
}
