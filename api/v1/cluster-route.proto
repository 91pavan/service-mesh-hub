syntax = "proto3";
package zephyr.solo.io;
option go_package = "github.com/solo-io/mesh-projects/pkg/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/solo-kit/api/v1/solo-kit.proto";
import "github.com/solo-io/solo-kit/api/v1/ref.proto";
import "github.com/solo-io/solo-kit/api/v1/status.proto";
import "github.com/solo-io/solo-kit/api/v1/metadata.proto";

message MeshBridge {
    option (core.solo.io.resource).short_name = "mb";
    option (core.solo.io.resource).plural_name = "mesh_bridges";


    // Status indicates the validation status of this resource.
    // Status is read-only by clients, and set by gloo during validation
    core.solo.io.Status status = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "testdiff:\"ignore\""];

    // Metadata contains the object metadata for this resource
    core.solo.io.Metadata metadata = 2 [(gogoproto.nullable) = false];

    ClusterResourceRef source_mesh = 3;

    ClusterResourceRef target_mesh = 4;
    // Namespace in which to find gloo
    string gloo_namespace = 5;

    repeated core.solo.io.ResourceRef sources = 6;
}

message ClusterResourceRef {
    core.solo.io.ResourceRef resource = 1;
    string cluster_name = 2;
}
