// Code generated by MockGen. DO NOT EDIT.
// Source: ./interfaces.go

// Package mock_csr_agent_controller is a generated GoMock package.
package mock_csr_agent_controller

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/solo-io/mesh-projects/pkg/api/security.zephyr.solo.io/v1alpha1"
	cert_secrets "github.com/solo-io/mesh-projects/pkg/security/secrets"
)

// MockCertClient is a mock of CertClient interface
type MockCertClient struct {
	ctrl     *gomock.Controller
	recorder *MockCertClientMockRecorder
}

// MockCertClientMockRecorder is the mock recorder for MockCertClient
type MockCertClientMockRecorder struct {
	mock *MockCertClient
}

// NewMockCertClient creates a new mock instance
func NewMockCertClient(ctrl *gomock.Controller) *MockCertClient {
	mock := &MockCertClient{ctrl: ctrl}
	mock.recorder = &MockCertClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCertClient) EXPECT() *MockCertClientMockRecorder {
	return m.recorder
}

// EnsureSecretKey mocks base method
func (m *MockCertClient) EnsureSecretKey(ctx context.Context, obj *v1alpha1.MeshGroupCertificateSigningRequest) (*cert_secrets.RootCaData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureSecretKey", ctx, obj)
	ret0, _ := ret[0].(*cert_secrets.RootCaData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnsureSecretKey indicates an expected call of EnsureSecretKey
func (mr *MockCertClientMockRecorder) EnsureSecretKey(ctx, obj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureSecretKey", reflect.TypeOf((*MockCertClient)(nil).EnsureSecretKey), ctx, obj)
}
