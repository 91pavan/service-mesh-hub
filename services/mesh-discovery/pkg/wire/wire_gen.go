// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package wire

import (
	"context"

	"github.com/solo-io/mesh-projects/pkg/common/docker"
	"github.com/solo-io/mesh-projects/services/common/multicluster/wire"
	"github.com/solo-io/mesh-projects/services/mesh-discovery/pkg/mesh/consul"
	"github.com/solo-io/mesh-projects/services/mesh-discovery/pkg/mesh/istio"
	"github.com/solo-io/mesh-projects/services/mesh-discovery/pkg/mesh/linkerd"
)

// Injectors from wire.go:

func InitializeDiscovery(ctx context.Context) (DiscoveryContext, error) {
	imageNameParser := docker.NewImageNameParser()
	config, err := wire.LocalKubeConfigProvider()
	if err != nil {
		return DiscoveryContext{}, err
	}
	asyncManager, err := wire.LocalManagerProvider(ctx, config)
	if err != nil {
		return DiscoveryContext{}, err
	}
	asyncManagerController := wire.AsyncManagerControllerProvider(ctx, asyncManager)
	asyncManagerStartOptionsFunc := wire.LocalManagerStarterProvider(asyncManagerController)
	multiClusterDependencies := wire.MulticlusterDependenciesProvider(ctx, asyncManager, asyncManagerController, asyncManagerStartOptionsFunc)
	istioMeshScanner := istio.NewIstioMeshScanner(imageNameParser)
	consulConnectInstallationScanner := consul.NewConsulConnectInstallationScanner(imageNameParser)
	consulConnectMeshScanner := consul.NewConsulMeshScanner(imageNameParser, consulConnectInstallationScanner)
	linkerdMeshScanner := linkerd.NewLinkerdMeshScanner(imageNameParser)
	discoveryContext := DiscoveryContextProvider(imageNameParser, multiClusterDependencies, istioMeshScanner, consulConnectMeshScanner, linkerdMeshScanner)
	return discoveryContext, nil
}
