// Code generated by MockGen. DO NOT EDIT.
// Source: ./owner_fetcher.go

// Package mock_mesh_workload is a generated GoMock package.
package mock_mesh_workload

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/apps/v1"
	v10 "k8s.io/api/core/v1"
)

// MockOwnerFetcher is a mock of OwnerFetcher interface
type MockOwnerFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockOwnerFetcherMockRecorder
}

// MockOwnerFetcherMockRecorder is the mock recorder for MockOwnerFetcher
type MockOwnerFetcherMockRecorder struct {
	mock *MockOwnerFetcher
}

// NewMockOwnerFetcher creates a new mock instance
func NewMockOwnerFetcher(ctrl *gomock.Controller) *MockOwnerFetcher {
	mock := &MockOwnerFetcher{ctrl: ctrl}
	mock.recorder = &MockOwnerFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOwnerFetcher) EXPECT() *MockOwnerFetcherMockRecorder {
	return m.recorder
}

// GetDeployment mocks base method
func (m *MockOwnerFetcher) GetDeployment(ctx context.Context, pod *v10.Pod) (*v1.Deployment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeployment", ctx, pod)
	ret0, _ := ret[0].(*v1.Deployment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeployment indicates an expected call of GetDeployment
func (mr *MockOwnerFetcherMockRecorder) GetDeployment(ctx, pod interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeployment", reflect.TypeOf((*MockOwnerFetcher)(nil).GetDeployment), ctx, pod)
}
