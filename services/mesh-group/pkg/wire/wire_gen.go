// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package wire

import (
	"context"

	"github.com/solo-io/mesh-projects/services/common/multicluster/wire"
	"github.com/solo-io/mesh-projects/services/mesh-discovery/pkg/discovery"
	"github.com/solo-io/mesh-projects/services/mesh-group/pkg/controller"
)

// Injectors from wire.go:

func InitializeMeshGroup(ctx context.Context) (MeshGroupContext, error) {
	config, err := wire.LocalKubeConfigProvider()
	if err != nil {
		return MeshGroupContext{}, err
	}
	asyncManager, err := wire.LocalManagerProvider(ctx, config)
	if err != nil {
		return MeshGroupContext{}, err
	}
	asyncManagerController := wire.AsyncManagerControllerProvider(ctx, asyncManager)
	asyncManagerStartOptionsFunc := wire.LocalManagerStarterProvider(asyncManagerController)
	multiClusterDependencies := wire.MulticlusterDependenciesProvider(ctx, asyncManager, asyncManagerController, asyncManagerStartOptionsFunc)
	localMeshClient := discovery.NewLocalMeshClient(asyncManager)
	meshGroupValidator := controller.MeshGroupValidatorProvider(localMeshClient)
	meshGroupEventHandler := controller.MeshGroupEventHandlerProvider(ctx, meshGroupValidator)
	meshGroupContext := MeshGroupContextProvider(multiClusterDependencies, meshGroupEventHandler)
	return meshGroupContext, nil
}
