
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: app-group
    app-group: app-name
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "5"
  name: app-name
  namespace: {{ $.Release.Namespace }}
---
{{- if .Values.global.rbac.create}}
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: app-name-role-binding
  labels:
    app: app-group
    app-group: app-name
subjects:
  - kind: ServiceAccount
    name: app-name
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
  {{- end }}
---
{{- if not .Values.meshDiscovery.disabled }}
{{- $image := .Values.meshDiscovery.deployment.image }}
{{- if .Values.global  }}
{{- $image = merge .Values.meshDiscovery.deployment.image .Values.global.image }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app-group
    app-group: app-name
  name: app-name
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.meshDiscovery.deployment.replicas }}
  selector:
    matchLabels:
      app-group: app-name
  template:
    metadata:
      labels:
        app-group: app-name
      {{- if .Values.meshDiscovery.deployment.stats }}
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
      {{- end}}
    spec:
      serviceAccountName: app-name
      volumes:
        - name: aws-cred
          secret:
            secretName: aws-cred
      containers:
      - image: {{template "gloo.image" $image}}
        imagePullPolicy: {{ $image.pullPolicy }}
        name: app-name
        ## If using EKS, create a secret called "aws-cred" in the .Release.Namespace namespace
        ## and include the following key-value pair:
        ## "credentials": <base64-encoded aws credentials, as can be gotten from: cat ~/.aws/credentials | base64>
        volumeMounts:
          - mountPath: "/root/.aws/"
            name: aws-cred
            readOnly: true
{{- if .Values.meshDiscovery.deployment.resources }}
        resources:
{{ toYaml .Values.meshDiscovery.deployment.resources | indent 10}}
{{- end}}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        {{- if .Values.meshDiscovery.deployment.stats }}
          - name: START_STATS_SERVER
            value: "true"
        {{- end}}
{{- end }}
