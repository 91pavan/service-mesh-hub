steps:
# Setup SSH
# These are required before dep
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=ci/id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=build
  - --key=build-key
  id: 'get-ssh-key'
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv ./ci/github_known_hosts /root/.ssh/known_hosts
    git config --global url."ssh://git@github.com/solo-io".insteadOf https://github.com/solo-io
  id: 'configure-git'

# This is required to instruct go not to use it's standard sumdb for pulling these deps
- name: "golang:1.13.4"
  args: ["go", "env", "-w", "GOPRIVATE=github.com/solo-io"]
  id: "set-private"


- name: gcr.io/cloud-builders/gsutil
  entrypoint: "bash"
  args:
    [
      "-c",
      "mkdir -p /go/pkg && cd /go/pkg && gsutil cat gs://$PROJECT_ID-cache/mesh-projects/mesh-projects-mod.tar.gz | tar -xzf -",
    ]
  id: "untar-mod-cache"
  waitFor: ["-"]

# Using prepare-workspace container from github.com/solo-io/cloud-builders/prepare-go-workspace
# This copies files into the proper workspace layout and so must be run before other tasks
- name: "gcr.io/$PROJECT_ID/prepare-go-workspace:0.2.4"
  args:
  - "--repo-owner"
  - "solo-io"
  - "--repo-name"
  - "mesh-projects"
  - "--repo-sha"
  - "$COMMIT_SHA"
  - "--repo-output-dir"
  - "."
  - "--use-ssh"
  env:
  - "PROJECT_ROOT=github.com/solo-io/mesh-projects"
  id: "prepare-workspace"

# Helm setup steps
- name: gcr.io/cloud-builders/gsutil
  entrypoint: mkdir
  args: ['-p', './_output/helm']
  dir: &dir "/workspace/mesh-projects"
  waitFor: ['prepare-workspace']
  id: 'make-helm-dir'
- name: 'gcr.io/$PROJECT_ID/go-mod-make:0.2.1'
  args: ['fetch-helm']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/mesh-projects'
  - 'TAGGED_VERSION=$TAG_NAME'
  dir: *dir
  id: 'fetch-helm'
  waitFor: ['prepare-workspace']



- name: 'gcr.io/$PROJECT_ID/e2e-go-mod-ginkgo:0.2.1'
  env:
  - 'PROJECT_ROOT=github.com/solo-io/mesh-projects'
  dir: *dir
  entrypoint: make
  args: ['check-format']
  waitFor: ['prepare-workspace']
  id: 'check-format'

- name: 'gcr.io/$PROJECT_ID/go-mod-make:0.2.1'
  entrypoint: 'bash'
  args: ['ci/check-code-and-docs-gen.sh']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/mesh-projects'
  - 'TAGGED_VERSION=$TAG_NAME'
  dir: *dir
  waitFor: ['prepare-workspace']
  id: 'check-code-and-docs-gen'

- name: 'gcr.io/$PROJECT_ID/go-mod-make:0.2.1'
  args: ['docker']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/mesh-projects'
  - 'TAGGED_VERSION=$TAG_NAME'
  - 'HELM_HOME=/root/.helm'
  dir: *dir
  id: 'make'

- name: gcr.io/cloud-builders/gcloud
  args: ['config', 'set', 'compute/zone', 'us-central1-a']
  id: 'set-test-zone'
  waitFor: ['prepare-workspace']
- name: gcr.io/cloud-builders/gcloud
  args: ['container', 'clusters', 'get-credentials', 'test-cluster']
  id: 'get-test-credentials'
  waitFor: ['set-test-zone']


- name: 'gcr.io/$PROJECT_ID/e2e-go-mod-ginkgo:0.2.1'
  args: ['-r', '-p']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/mesh-projects'
  - 'TAGGED_VERSION=$TAG_NAME'
  - 'HELM_HOME=/root/.helm'
  secretEnv: ["GITHUB_TOKEN"]
  dir: *dir
  waitFor: ['make', 'get-test-credentials']
  id: 'test'

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker login quay.io --username "solo-io+solobot" --password $$QUAY_IO_PASSWORD']
  secretEnv: ['QUAY_IO_PASSWORD']
  id: 'docker-login'
  waitFor: ['test']


- name: 'gcr.io/$PROJECT_ID/go-mod-make:0.2.1'
  args: ['release']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/mesh-projects'
  - 'TAGGED_VERSION=$TAG_NAME'
  - 'HELM_HOME=/root/.helm'
  dir: *dir
  waitFor: ['docker-login']
  secretEnv: ['GITHUB_TOKEN', 'QUAY_IO_PASSWORD']
  id: 'release'
# 2) Publish helm chart, compile manifests, produce release artifacts, deploy docs
# isolating this portion of the release in order to force the manifest to be regenerated with the tagged version
- name: 'gcr.io/$PROJECT_ID/go-mod-make:0.2.1'
  args: ['manifest',  '-B']
  env:
  - 'DOCKER_CONFIG=/workspace/docker-config'
  - 'TAGGED_VERSION=$TAG_NAME'
  - 'PROJECT_ROOT=github.com/solo-io/mesh-projects'
  - 'HELM_HOME=/root/.helm' # tell helm where to find data
  dir: *dir
  id: 'release-chart'
# 3) Sync helm chart data back to google storage bucket
- name: 'gcr.io/$PROJECT_ID/go-mod-make:0.2.1'
  args: ['save-helm']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/mesh-projects'
  - 'TAGGED_VERSION=$TAG_NAME'
  dir: *dir
  id: 'save-helm-chart'

secrets:
- kmsKeyName: projects/gloo-ee/locations/global/keyRings/build/cryptoKeys/build-key
  secretEnv:
    GITHUB_TOKEN: CiQAwdWthrSJ1uI5Ao/LnmX8OzXmA5TNCtDpeV6JdNouaGh5vpwSUQD5SXFIkCBvnu/wYDSGwgWNJaQV75wP/kDephn5GGuGCe0EGFXXE54zyH8iHRL45Uq0s39SoHEyYoZXF2Qla8IbKGAKswPRViYSChPthQILdA==
    QUAY_IO_PASSWORD: CiQAwdWthifvdUjpVHAln3ZIz4WljWx6qLt8E4yJArmrU4/1HQoSaQD5SXFIeMulT7DxGdwW0L9R+gA0SATR05xpTz7JS9LXJK+4iYPlFvVPs7O3DYee2YPJoF7o44vJ94+AyuMLQucS6BhHXQ0t//GvQWaFvdcTO4qH5HYgGQSrRY0a4E3l+4q6/M4da2m98Q==
timeout: 1800s
tags: ['mesh-projects']
options:
  machineType: 'N1_HIGHCPU_32'
  volumes:
  - name: "gopath"
    path: "/go"
  - name: "ssh"
    path: /root/.ssh
